// -- WAJIB DIISI --
var token = "7849305390:AAEH2H2L4XPKL8lJwEiArlqIMfXsprnQ30Q"; // Ganti dengan token bot Anda
const adminBot = 123456789; // Ganti dengan ID Telegram Anda (gunakan @userinfobot)
const spreadsheetId = "10TupgRfroPas2SjNNY19Q4uB82AYGUVwIIisBxb9Mgg"; // Ganti dengan ID Google Sheet
const sheetName = "Data"; // Ganti dengan nama sheet (jika beda)

// -- LIBRARY (ASUMSI SUDAH DITAMBAHKAN) --
const tg = new telegram.daftar(token);

// -- FUNGSI UTILITY --
function getSheet() {
    return SpreadsheetApp.openById(spreadsheetId).getSheetByName(sheetName);
}

// -- WEBHOOK (TETAP) --
function setWebhook() {
    var url = ScriptApp.getService().getUrl();
    var r = tg.setWebhook(url);
    return Logger.log(r);
}

function deleteWebhook() {
    let hasil = tg.deleteWebhook();
    return Logger.log(hasil);
}


// -- FUNGSI UTAMA (DIPERBARUI) --

function doPost(e) {
    try {
        const update = JSON.parse(e.postData.contents);

        // LOG UPDATE (untuk debugging)
        console.log("Update Received:", JSON.stringify(update, null, 2));

        if (update.message) {
            handleMessage(update.message);
        } else if (update.inline_query) {
            handleInlineQuery(update.inline_query);
        }  else if (update.callback_query) { // Tambahkan penanganan callback query
            handleCallbackQuery(update.callback_query);
        }

    } catch (error) {
        console.error("Error in doPost:", error);  // Log error dengan console.error
        // Kirim error ke admin (jika memungkinkan)
        if (typeof adminBot !== 'undefined' && adminBot) { //cek adminBot ada dan tidak 0
            try {
              tg.sendMessage(adminBot, "Error in doPost: " + error.toString());
            } catch (sendError) {
                console.error("Error sending error message:", sendError);
            }
        }
    }
}

function handleMessage(message) {
    const chatId = message.chat.id;
    const text = message.text;

    // LOG CHAT ID (untuk debugging)
    console.log("Chat ID:", chatId);

    // --- PENANGANAN PESAN ---

    // 1.  /start (dengan tombol inline)
    if (text === "/start") {
        const keyboard = [
            [{ text: "üîç Cari File", switch_inline_query_current_chat: "" }],
            [{ text: "‚ÑπÔ∏è Bantuan", callback_data: "help" }],
        ];
        const replyMarkup = { inline_keyboard: keyboard };

        tg.sendMessage(chatId, "Selamat datang! Gunakan tombol di bawah.", { reply_markup: replyMarkup });
        return; // Penting: keluar dari fungsi setelah menangani /start
    }


    // 2. Admin meneruskan pesan
    if (message.forward_from && message.forward_from.id === adminBot) {
          console.log("Pesan terusan dari admin diterima.");
          saveForwardedMessage(message);
          tg.sendMessage(chatId, "Pesan terusan disimpan!");
          return;
    }
    // 3. Admin Upload file
      if (message.document && chatId === adminBot) {
        console.log("File diterima dari admin.");
        saveUploadedFile(message);
        tg.sendMessage(chatId, "File disimpan!");
        return;
    }


    // 4. Pesan Teks Biasa (dari siapa saja) - Contoh Sederhana
      if (text) {  //cek text ada atau tidak
        console.log("Pesan teks biasa diterima:", text);
        tg.sendMessage(chatId, "Anda mengirim: " + text); // Balas dengan echo
        return;
    }

    // Jika tidak ada yang cocok
    tg.sendMessage(chatId, "Perintah tidak dikenali.");
}



function handleInlineQuery(inlineQuery) {
    const queryId = inlineQuery.id;
    const queryText = inlineQuery.query.toLowerCase();
    const results = searchFiles(queryText);
    tg.answerInlineQuery(queryId, results, { cache_time: 10 });
}

function handleCallbackQuery(callbackQuery) {
    const queryId = callbackQuery.id;
    const data = callbackQuery.data;
    const chatId = callbackQuery.message.chat.id; // chatId ada di message

     console.log("Callback query received. Data:", data, "Chat ID:", chatId);

    if (data === "help") {
        tg.answerCallbackQuery(queryId, { text: "Ini adalah pesan bantuan!", show_alert: true });
    }
}



// --- FUNGSI PENYIMPANAN (TETAP, HANYA SEDIKIT PERUBAHAN) ---

function saveUploadedFile(message) {
    const sheet = getSheet();
    const fileId = message.document.file_id;
    const fileName = message.document.file_name;
      console.log("Saving file:", fileName, "with ID:", fileId); // Log
    sheet.appendRow([new Date(), "file", fileName, fileId, message.chat.id]);
}

function saveForwardedMessage(message) {
    const sheet = getSheet();
    let fileId = '';
    let fileName = '';

    if (message.document) {
        fileId = message.document.file_id;
        fileName = message.document.file_name;
    } else if (message.photo) {
        fileId = message.photo[message.photo.length - 1].file_id;
        fileName = "photo_" + fileId;
    } else if (message.video) {
        fileId = message.video.file_id;
        fileName = message.video.file_name || "video_" + fileId;
    } else if (message.text) {
        fileName = "text";
    }
     console.log("Saving forwarded message:", fileName, "with ID:", fileId); //log
    sheet.appendRow([new Date(), "forwarded", fileName, fileId, message.chat.id]);
}

// --- FUNGSI PENCARIAN (TETAP) ---

function searchFiles(query) {
    const sheet = getSheet();
    const data = sheet.getDataRange().getValues();
    const results = [];

    for (let i = 1; i < data.length; i++) { // Mulai dari 1 (abaikan header)
        const row = data[i];
        const type = row[1];
        const fileName = row[2].toLowerCase();
        const fileId = row[3];

        if (fileName.includes(query)) {
            let result = {};

            if (type === "file" || (type === "forwarded" && fileName.startsWith("photo_"))) {
                result = {
                    type: "photo",
                    id: Utilities.base64Encode(fileId),
                    photo_file_id: fileId,
                    title: fileName
                };
            } else if (type === "forwarded" && fileName.startsWith("video_")) {
                result = {
                    type: "video",
                    id: Utilities.base64Encode(fileId),
                    video_file_id: fileId,
                    title: fileName
                };
            } else if (type === "forwarded" && fileName) {
                result = {
                    type: "article",
                    id: Utilities.base64Encode(fileId + i), // ID unik
                    title: fileName,
                    input_message_content: {
                        message_text: `File: ${fileName}\nFile ID: ${fileId}`,
                    }
                };
            }

            if (Object.keys(result).length > 0) {
                results.push(result);
            }
            if (results.length >= 50) break; // Batasi hasil
        }
    }
    return results;
}

